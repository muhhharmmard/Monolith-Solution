apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverseproxy7
  labels:
    service: reverseproxy7
spec:
  replicas: 2
  selector:
    matchLabels:
      service: reverseproxy7
  template:
    metadata:
      labels:
        service: reverseproxy7
    spec:
      containers:
      - image: docker.io/doctorcodes/udagram-reverseproxy:v1
        name: reverseproxy1
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: reverseproxy7
  name: reverseproxy7
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: reverseproxy1